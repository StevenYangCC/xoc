$(info "====---- START Makefile.readelf ----====")

#ADD ALL TARGET MACHINES INTO DEFAULT TARGET SET.
ifndef FOR_ARM
FOR_ARM=true
endif

ifndef FOR_X86
FOR_X86=true
endif

ifndef FOR_X64
FOR_X64=true
endif

ifndef FOR_SCORE
FOR_SCORE=true
endif

ifndef FOR_TECO
FOR_TECO=true
endif

ifeq ($(DEBUG),)
  DEBUG=true
endif

ifeq ($(OPEN_COVERAGE),true)
  CFLAGS+=--coverage
endif

CFLAGS+=-Wall
ROOT_DIR=../..
COM_DIR=../../com
OPT_DIR=../../opt
ELF_DIR=..
READELF_DIR=.
READELF_OUTPUT=readelf.exe

#NOTE SET $TARG BEFORE INCLUDE OTHER MODULES.
ifeq ($(TARG),)
  #SET DEFAULT TARG. TARG INFORM IS USELESS TO READELF.EXE
  TARG=FOR_DEX
endif

include $(ELF_DIR)/Makefile.inc
include $(COM_DIR)/Makefile.inc
include $(ROOT_DIR)/Makefile.option
include $(OPT_DIR)/Makefile.inc

MISC_TARG_MACH_ELF_OBJS+=\
$(ELF_DIR)/misc_elf_mgr.o

#ADD SPECIFIC TARGET DEPENDENT OBJECTS IF REFERRED BY PARAMETERS.
ifeq ($(FOR_ARM),true)
  TARG_ARM_DIR=../../arm
  MISC_TARG_MACH_ELF_OBJS+=$(TARG_ARM_DIR)/*_elf_targinfo.o
  -include $(TARG_ARM_DIR)/arm_elf_targinfo.d
endif

ifeq ($(FOR_X86),true)
  TARG_X86_DIR=../../x86
  MISC_TARG_MACH_ELF_OBJS+=$(TARG_X86_DIR)/*_elf_targinfo.o
  -include $(TARG_X86_DIR)/*_elf_targinfo.d
endif

ifeq ($(FOR_X64),true)
  TARG_X64_DIR=../../x64
  MISC_TARG_MACH_ELF_OBJS+=$(TARG_X64_DIR)/*_elf_targinfo.o
  -include $(TARG_X64_DIR)/*_elf_targinfo.d
endif

ifeq ($(FOR_SCORE),true)
  TARG_SCORE_DIR=../../score
  MISC_TARG_MACH_ELF_OBJS+=$(TARG_SCORE_DIR)/*_elf_targinfo.o
  -include $(TARG_SCORE_DIR)/*_elf_targinfo.d
endif

ifeq ($(FOR_TECO),true)
  TARG_TECO_DIR=../../teco
  MISC_TARG_MACH_ELF_OBJS+=$(TARG_TECO_DIR)/*_elf_targinfo.o
  -include $(TARG_TECO_DIR)/*_elf_targinfo.d
endif

OPT_DEP_OBJS+=\
$(OPT_DIR)/data_type.o\
$(OPT_DIR)/logmgr.o\
$(OPT_DIR)/symtab.o\
$(OPT_DIR)/util.o\
$(OPT_DIR)/option.o \
$(OPT_DIR)/dwarf.o \
$(OPT_DIR)/label.o

CFLAGS+=\
  -D$(TARG) \
  -Wno-unknown-pragmas \
  -Wno-write-strings \
  -Wsign-promo \
  -Wparentheses \
  -Wformat \
  -Wsign-compare \
  -Wpointer-arith \
  -Wno-multichar \
  -Winit-self \
  -Wswitch \
  -D_SUPPORT_C11_

#Disable -Wconversion to avoid too much complaints.

ifneq (,$(filter $(CC),g++ gcc))
  CFLAGS+=-Wno-strict-aliasing -finline-limit=10000000
endif

TMP_ELF_OBJS=$(foreach n,$(ELF_OBJS),$(ELF_DIR)/$(n))

READELF_OBJS+=\
readelf.o\

#Display internal variables.
$(info "CC:$(CC)")
$(info "INC:$(INC)")
$(info "CFLAGS:$(CFLAGS)")
$(info "DEBUG:$(DEBUG)")
$(info "TMP_ELF_OBJS:$(TMP_ELF_OBJS)")

#Define rules.
$(READELF_OUTPUT): tmp_elf_objs misc_targ_mach_elf_objs $(COM_OUTPUT) \
  $(READELF_OBJS)
	@echo "BUILD $(READELF_OUTPUT)"
	@echo "EXEC:"
	$(CC) $(TMP_ELF_OBJS) $(MISC_TARG_MACH_ELF_OBJS) $(READELF_OBJS) \
      $(OPT_DEP_OBJS) \
      -Xlinker "-(" \
      $(COM_DIR)/$(COM_OUTPUT) \
      -Xlinker "-)" \
      $(CFLAGS) \
      -o $@ -lstdc++ -lm  #-lgcov -lgcc
	@echo "SUCCESS TO GENERATE $(READELF_OUTPUT)!!"

$(COM_OUTPUT):
	@echo "BUILD $(COM_OUTPUT)"
	@echo "EXEC:"
	cd $(COM_DIR) && make -f Makefile TARG=$(TARG) DEBUG=$(DEBUG) \
      CFLAGS="$(CFLAGS)"

%.o:%.cpp
	@echo "BUILD $<"
	@echo "EXEC:"
	$(INFER) $(CC) $(CFLAGS) -c $< -o $@

tmp_elf_objs: $(TMP_ELF_OBJS)
	@echo "EXEC:tmp_elf_objs:$(TMP_ELF_OBJS)"

misc_targ_mach_elf_objs: $(MISC_TARG_MACH_ELF_OBJS)
	@echo "EXEC:misc_targ_mach_elf_objs:$(MISC_TARG_MACH_ELF_OBJS)"

clean:
	@find ../ -name "*.o" | xargs rm -f
	@find ../ -name "*.d" | xargs rm -f
	@find ../ -name "*.a" | xargs rm -f
	@find ../ -name "*.exe" | xargs rm -f
	@find ../ -name "*.elf" | xargs rm -f
	@find ../ -name "*.out" | xargs rm -f
	@find ../ -name "*.tmp" | xargs rm -f
	@find ../ -name "*.asm" | xargs rm -f
	@find ../ -name "*.swp" | xargs rm -f
	@find ../ -name "*.swo" | xargs rm -f
	@find ../ -name "*.log" | xargs rm -f
	@find ../ -name "*.LOGLOG" | xargs rm -f
	@find ../ -name "LOGLOG" | xargs rm -f

-include $(COM_DIR)/*.d
-include $(ELF_DIR)/*.d
-include $(READELF_DIR)/*.d

$(info "====---- END Makefile.readelf ----====")
