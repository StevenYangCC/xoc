/*@
Copyright (c) 2013-2021, Su Zhenyu steven.known@gmail.com
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the Su Zhenyu nor the names of its contributors
      may be used to endorse or promote products derived from this software
      without specific prior written permission.

THIS SOFTWARE IS PROVIDED "AS IS" AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@*/
#include "cominc.h"
#include "comopt.h"

namespace xoc {

IRDesc g_ir_desc[] = {
    { IR_UNDEF, "undef", 0x0, 0,
      0, //size of class object
      IRDescFlagSeg(0), //attr
      dumpUndef,
      NO_VERIFY_FUNC,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      NO_ACC_KID_FUNC,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_CONST, "const", CConst::kid_map, CConst::kid_num,
      sizeof(CConst),
      IRDescFlagSeg(IRC_IS_LEAF),
      dumpConst,
      verifyConst,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      NO_ACC_KID_FUNC,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_ID, "id", CId::kid_map, CId::kid_num,
      sizeof(CId),
      IRDescFlagSeg(IRC_HAS_IDINFO|IRC_IS_MEM_REF|IRC_IS_LEAF|
          IRC_IS_NON_PR_MEMREF|IRC_IS_MEM_OPND|IRC_HAS_DU),
      dumpGeneral,
      verifyGeneral,
      NO_ACC_RHS_FUNC,
      CId::accIdinfo,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      NO_ACC_KID_FUNC,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_LD, "ld", CLd::kid_map, CLd::kid_num,
      sizeof(CLd),
      IRDescFlagSeg(IRC_HAS_IDINFO|IRC_IS_MEM_REF|IRC_IS_MEM_OPND|IRC_IS_LEAF|
          IRC_IS_NON_PR_MEMREF|IRC_HAS_DU|IRC_HAS_OFFSET|IRC_IS_DIRECT_MEM_OP|
          IRC_HAS_STORAGE_SPACE),
      dumpGeneral,
      verifyLD,
      NO_ACC_RHS_FUNC,
      CLd::accIdinfo,
      CLd::accOfst,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      NO_ACC_KID_FUNC,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      CLd::accSS,
      NO_ACC_RESLIST_FUNC, },

    { IR_ILD, "ild", CILd::kid_map, CILd::kid_num,
      sizeof(CILd),
      IRDescFlagSeg(IRC_IS_MEM_REF|IRC_IS_MEM_OPND|
          IRC_IS_NON_PR_MEMREF|IRC_HAS_DU|IRC_HAS_OFFSET|IRC_IS_INDIRECT_MEM_OP|
          IRC_HAS_STORAGE_SPACE),
      dumpGeneral,
      verifyILd,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      CILd::accOfst,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CILd::accKid,
      NO_ACC_BB_FUNC,
      CILd::accBase,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      CILd::accSS,
      NO_ACC_RESLIST_FUNC, },

    { IR_PR, "pr", CPr::kid_map, CPr::kid_num,
      sizeof(CPr),
      IRDescFlagSeg(IRC_IS_MEM_REF|IRC_IS_MEM_OPND|IRC_IS_LEAF|IRC_HAS_DU),
      dumpReadPR,
      verifyPR,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      CPr::accSSAInfo,
      CPr::accPrno,
      NO_ACC_RESPR_FUNC,
      NO_ACC_KID_FUNC,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_ARRAY, "array", CArray::kid_map, CArray::kid_num,
      sizeof(CArray),
      IRDescFlagSeg(IRC_IS_MEM_REF|IRC_IS_MEM_OPND|IRC_IS_NON_PR_MEMREF|
          IRC_HAS_DU|IRC_HAS_OFFSET|IRC_IS_ARRAY_OP|IRC_HAS_STORAGE_SPACE),
      dumpArray,
      verifyArrayOp,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      CArray::accOfst,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CArray::accKid,
      NO_ACC_BB_FUNC,
      CArray::accBase,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      CArray::accSS,
      NO_ACC_RESLIST_FUNC, },

    { IR_ST, "st", CSt::kid_map, CSt::kid_num,
      sizeof(CSt),
      IRDescFlagSeg(IRC_HAS_IDINFO|IRC_IS_STMT|IRC_IS_MEM_REF|IRC_HAS_RESULT|
          IRC_IS_STMT_IN_BB|IRC_IS_NON_PR_MEMREF|IRC_HAS_DU|IRC_HAS_OFFSET|
          IRC_IS_DIRECT_MEM_OP|IRC_HAS_RHS|IRC_HAS_STORAGE_SPACE),
      dumpGeneral,
      verifySt,
      CSt::accRHS,
      CSt::accIdinfo,
      CSt::accOfst,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CSt::accKid,
      CSt::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      CSt::accSS,
      NO_ACC_RESLIST_FUNC, },

    { IR_STPR, "stpr", CStpr::kid_map, CStpr::kid_num,
      sizeof(CStpr),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_MEM_REF|IRC_HAS_RESULT|
          IRC_IS_STMT_IN_BB|IRC_HAS_DU|IRC_IS_WRITE_PR|IRC_IS_WRITE_WHOLE_PR|
          IRC_HAS_RHS),
      dumpWritePR,
      verifyStpr,
      CStpr::accRHS,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      CStpr::accSSAInfo,
      CStpr::accPrno,
      CStpr::accResultPR,
      CStpr::accKid,
      CStpr::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_STARRAY, "starray", CStArray::kid_map, CStArray::kid_num,
      sizeof(CStArray),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_MEM_REF|IRC_HAS_RESULT|
          IRC_IS_STMT_IN_BB|IRC_IS_NON_PR_MEMREF|IRC_HAS_DU|IRC_HAS_OFFSET|
          IRC_IS_ARRAY_OP|IRC_HAS_RHS|IRC_HAS_STORAGE_SPACE),
      dumpStArray,
      verifyArrayOp,
      CStArray::accRHS,
      NO_ACC_IDINFO_FUNC,
      CStArray::accOfst,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CStArray::accKid,
      CStArray::accBB,
      CStArray::accBase,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      CStArray::accSS,
      NO_ACC_RESLIST_FUNC, },

    { IR_IST, "ist", CISt::kid_map, CISt::kid_num,
      sizeof(CISt),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_MEM_REF|IRC_HAS_RESULT|
          IRC_IS_STMT_IN_BB|IRC_IS_NON_PR_MEMREF|IRC_HAS_DU|IRC_HAS_OFFSET|
          IRC_IS_INDIRECT_MEM_OP|IRC_HAS_RHS|IRC_HAS_STORAGE_SPACE),
      dumpGeneral,
      verifyISt,
      CISt::accRHS,
      NO_ACC_IDINFO_FUNC,
      CISt::accOfst,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CISt::accKid,
      CISt::accBB,
      CISt::accBase,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      CISt::accSS,
      NO_ACC_RESLIST_FUNC, },

    { IR_SETELEM, "setelem", CSetElem::kid_map, CSetElem::kid_num,
      sizeof(CSetElem),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_MEM_REF|IRC_HAS_RESULT|
          IRC_IS_STMT_IN_BB|IRC_HAS_DU|IRC_IS_WRITE_PR),
      dumpWritePR,
      verifySetElem,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      CSetElem::accSSAInfo,
      CSetElem::accPrno,
      CSetElem::accResultPR,
      CSetElem::accKid,
      CSetElem::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_GETELEM, "getelem", CGetElem::kid_map, CGetElem::kid_num,
      sizeof(CGetElem),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_MEM_REF|IRC_HAS_RESULT|
          IRC_IS_STMT_IN_BB|IRC_HAS_DU|IRC_IS_WRITE_PR|IRC_IS_WRITE_WHOLE_PR),
      dumpWritePR,
      verifyGetElem,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      CGetElem::accSSAInfo,
      CGetElem::accPrno,
      CGetElem::accResultPR,
      CGetElem::accKid,
      CGetElem::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    //CALL might not def PR if there is not return value.
    { IR_CALL, "call", CCall::kid_map, CCall::kid_num,
      sizeof(CCall),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_MEM_REF|IRC_HAS_RESULT|
          IRC_HAS_IDINFO|IRC_IS_STMT_IN_BB|IRC_HAS_DU|IRC_HAS_STORAGE_SPACE),
      dumpCallStmt,
      verifyCall,
      NO_ACC_RHS_FUNC,
      CCall::accIdinfo,
      NO_ACC_OFST_FUNC,
      CCall::accSSAInfo,
      CCall::accPrno,
      CCall::accResultPR,
      CCall::accKid,
      CCall::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      CCall::accSS,
      NO_ACC_RESLIST_FUNC, },

    { IR_ICALL, "icall", CICall::kid_map, CICall::kid_num,
      sizeof(CICall),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_MEM_REF|IRC_IS_STMT_IN_BB|IRC_HAS_DU|
          //ICALL might not define PR if there is not return value.
          IRC_HAS_RESULT),
      dumpCallStmt,
      verifyICall,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      CICall::accSSAInfo,
      CICall::accPrno,
      CICall::accResultPR,
      CICall::accKid,
      CICall::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_LDA, "lda", CLda::kid_map, CLda::kid_num,
      sizeof(CLda),
      IRDescFlagSeg(IRC_HAS_IDINFO|IRC_IS_LEAF|IRC_HAS_OFFSET|
          IRC_HAS_STORAGE_SPACE),
      dumpLda,
      verifyLDA,
      NO_ACC_RHS_FUNC,
      CLda::accIdinfo,
      CLda::accOfst,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      NO_ACC_KID_FUNC,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      CLda::accSS,
      NO_ACC_RESLIST_FUNC, },

    { IR_ADD, "add", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_ASSOCIATIVE|IRC_IS_COMMUTATIVE),
      dumpBinAndUna,
      verifyADD,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_SUB, "sub", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_ASSOCIATIVE),
      dumpBinAndUna,
      verifyBin,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_MUL, "mul", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_ASSOCIATIVE|IRC_IS_COMMUTATIVE),
      dumpBinAndUna,
      verifyBin,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_DIV, "div", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN),
      dumpBinAndUna,
      verifyBin,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_REM, "rem", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN),
      dumpBinAndUna,
      verifyBin,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_MOD, "mod", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN),
      dumpBinAndUna,
      verifyBin,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_LAND, "land", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_LOGICAL),
      dumpBinAndUna,
      verifyCompare,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_LOR, "lor", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_LOGICAL),
      dumpBinAndUna,
      verifyCompare,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_BAND, "band", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_ASSOCIATIVE|IRC_IS_COMMUTATIVE),
      dumpBinAndUna,
      verifyBin,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_BOR, "bor", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_ASSOCIATIVE),
      dumpBinAndUna,
      verifyBin,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_XOR, "xor", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_ASSOCIATIVE|IRC_IS_COMMUTATIVE),
      dumpBinAndUna,
      verifyBin,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_ASR, "asr", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN),
      dumpBinAndUna,
      verifyShift,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_LSR, "lsr", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN),
      dumpBinAndUna,
      verifyShift,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_LSL, "lsl", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN),
      dumpBinAndUna,
      verifyShift,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_LT, "lt", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_RELATION),
      dumpBinAndUna,
      verifyCompare,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_LE, "le", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_RELATION),
      dumpBinAndUna,
      verifyCompare,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_GT, "gt", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_RELATION),
      dumpBinAndUna,
      verifyCompare,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_GE, "ge", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_RELATION),
      dumpBinAndUna,
      verifyCompare,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_EQ, "eq", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_ASSOCIATIVE|IRC_IS_COMMUTATIVE|
          IRC_IS_RELATION),
      dumpBinAndUna,
      verifyCompare,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_NE, "ne", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN|IRC_IS_ASSOCIATIVE|IRC_IS_COMMUTATIVE|
          IRC_IS_RELATION),
      dumpBinAndUna,
      verifyCompare,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_BNOT, "bnot", CUna::kid_map, CUna::kid_num,
      sizeof(CUna),
      IRDescFlagSeg(IRC_IS_UNA),
      dumpBinAndUna,
      verifyUna,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CUna::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_LNOT, "lnot", CUna::kid_map, CUna::kid_num,
      sizeof(CUna),
      IRDescFlagSeg(IRC_IS_UNA|IRC_IS_LOGICAL),
      dumpBinAndUna,
      verifyLNOT,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CUna::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_NEG, "neg", CUna::kid_map, CUna::kid_num,
      sizeof(CUna),
      IRDescFlagSeg(IRC_IS_UNA),
      dumpBinAndUna,
      verifyUna,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CUna::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_CVT, "cvt", CCvt::kid_map, CCvt::kid_num,
      sizeof(CCvt),
      IRDescFlagSeg(IRC_IS_UNA),
      dumpBinAndUna,
      verifyCVT,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CCvt::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_GOTO, "goto", CGoto::kid_map, CGoto::kid_num,
      sizeof(CGoto),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_STMT_IN_BB|IRC_IS_UNCONDITIONAL_BR),
      dumpBranch,
      verifyGOTO,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      NO_ACC_KID_FUNC,
      CGoto::accBB,
      NO_ACC_BASE_FUNC,
      CGoto::accLab,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_IGOTO, "igoto", CIGoto::kid_map, CIGoto::kid_num,
      sizeof(CIGoto),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_STMT_IN_BB|IRC_IS_UNCONDITIONAL_BR|
          IRC_HAS_CASE_LIST),
      dumpGeneral,
      verifyIGOTO,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CIGoto::accKid,
      CIGoto::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_DO_WHILE, "dowhile", CDoWhile::kid_map, CDoWhile::kid_num,
      sizeof(CDoWhile),
      IRDescFlagSeg(IRC_IS_STMT|IRC_HAS_JUDGE_TARGET),
      dumpDoWhile,
      verifyLoopCFS,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CDoWhile::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      CDoWhile::accDet,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_WHILE_DO, "whiledo", CWhileDo::kid_map, CWhileDo::kid_num,
      sizeof(CWhileDo),
      IRDescFlagSeg(IRC_IS_STMT|IRC_HAS_JUDGE_TARGET),
      dumpWhileDo,
      verifyLoopCFS,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CWhileDo::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      CWhileDo::accDet,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_DO_LOOP, "doloop", CDoLoop::kid_map, CDoLoop::kid_num,
      sizeof(CDoLoop),
      IRDescFlagSeg(IRC_IS_STMT|IRC_HAS_JUDGE_TARGET),
      dumpDoLoop,
      verifyLoopCFS,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CDoLoop::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      CDoLoop::accDet,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_IF, "if", CIf::kid_map, CIf::kid_num,
      sizeof(CIf),
      IRDescFlagSeg(IRC_IS_STMT|IRC_HAS_JUDGE_TARGET),
      dumpIf,
      verifyIF,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CIf::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      CIf::accDet,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_LABEL, "label", CLab::kid_map, CLab::kid_num,
      sizeof(CLab),
      IRDescFlagSeg(IRC_IS_STMT),
      dumpLabel,
      verifyNothing,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      NO_ACC_KID_FUNC,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      CLab::accLab,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_SWITCH, "switch", CSwitch::kid_map, CSwitch::kid_num,
      sizeof(CSwitch),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_STMT_IN_BB|IRC_HAS_CASE_LIST),
      dumpSWITCH,
      verifySWITCH,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CSwitch::accKid,
      CSwitch::accBB,
      NO_ACC_BASE_FUNC,
      CSwitch::accLab,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_DUMMYUSE, "dummyuse", CDummyUse::kid_map, CDummyUse::kid_num,
      sizeof(CDummyUse),
      IRDescFlagSeg(0),
      dumpGeneral,
      verifyGeneral,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CDummyUse::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_CASE, "case", CCase::kid_map, CCase::kid_num,
      sizeof(CCase),
      IRDescFlagSeg(0),
      dumpCase,
      verifyCase,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CCase::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      CCase::accLab,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_TRUEBR, "truebr", CTruebr::kid_map, CTruebr::kid_num,
      sizeof(CTruebr),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_STMT_IN_BB|IRC_IS_CONDITIONAL_BR|
          IRC_HAS_JUDGE_TARGET),
      dumpBranch,
      verifyBranch,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CTruebr::accKid,
      CTruebr::accBB,
      NO_ACC_BASE_FUNC,
      CTruebr::accLab,
      CTruebr::accDet,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_FALSEBR, "falsebr", CFalsebr::kid_map, CFalsebr::kid_num,
      sizeof(CFalsebr),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_STMT_IN_BB|IRC_IS_CONDITIONAL_BR|
          IRC_HAS_JUDGE_TARGET),
      dumpBranch,
      verifyBranch,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CFalsebr::accKid,
      CFalsebr::accBB,
      NO_ACC_BASE_FUNC,
      CFalsebr::accLab,
      CFalsebr::accDet,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_RETURN, "return", CRet::kid_map, CRet::kid_num,
      sizeof(CRet),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_STMT_IN_BB),
      dumpReturn,
      verifyReturn,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CRet::accKid,
      CRet::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_SELECT, "select", CSelect::kid_map, CSelect::kid_num,
      sizeof(CSelect),
      IRDescFlagSeg(IRC_HAS_JUDGE_TARGET),
      dumpSelect,
      verifySelect,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CSelect::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      CSelect::accDet,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_BREAK, "break", CBreak::kid_map, CBreak::kid_num,
      sizeof(CBreak),
      IRDescFlagSeg(IRC_IS_STMT),
      dumpGeneralNoType,
      verifyNothing,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      NO_ACC_KID_FUNC,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_CONTINUE, "continue", CContinue::kid_map, CContinue::kid_num,
      sizeof(CContinue),
      IRDescFlagSeg(IRC_IS_STMT),
      dumpGeneralNoType,
      verifyNothing,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      NO_ACC_KID_FUNC,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_ALLOCA, "alloca", CAlloca::kid_map, CAlloca::kid_num,
      sizeof(CAlloca),
      IRDescFlagSeg(IRC_IS_UNA),
      dumpGeneral,
      verifyGeneral,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CAlloca::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_POW, "pow", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN),
      dumpBinAndUna,
      verifyBin,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_NROOT, "nroot", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN),
      dumpBinAndUna,
      verifyBin,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_LOG, "log", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN),
      dumpBinAndUna,
      verifyBin,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_EXPONENT, "exponent", CBin::kid_map, CBin::kid_num,
      sizeof(CBin),
      IRDescFlagSeg(IRC_IS_BIN),
      dumpBinAndUna,
      verifyBin,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CBin::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_ABS, "abs", CUna::kid_map, CUna::kid_num,
      sizeof(CUna),
      IRDescFlagSeg(IRC_IS_UNA),
      dumpBinAndUna,
      verifyUna,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CUna::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_SIN, "sin", CUna::kid_map, CUna::kid_num,
      sizeof(CUna),
      IRDescFlagSeg(IRC_IS_UNA),
      dumpBinAndUna,
      verifyUna,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CUna::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_COS, "cos", CUna::kid_map, CUna::kid_num,
      sizeof(CUna),
      IRDescFlagSeg(IRC_IS_UNA),
      dumpBinAndUna,
      verifyUna,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CUna::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_TAN, "tan", CUna::kid_map, CUna::kid_num,
      sizeof(CUna),
      IRDescFlagSeg(IRC_IS_UNA),
      dumpBinAndUna,
      verifyUna,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CUna::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_ASIN, "asin", CUna::kid_map, CUna::kid_num,
      sizeof(CUna),
      IRDescFlagSeg(IRC_IS_UNA),
      dumpBinAndUna,
      verifyUna,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CUna::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_ACOS, "acos", CUna::kid_map, CUna::kid_num,
      sizeof(CUna),
      IRDescFlagSeg(IRC_IS_UNA),
      dumpBinAndUna,
      verifyUna,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CUna::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_ATAN, "atan", CUna::kid_map, CUna::kid_num,
      sizeof(CUna),
      IRDescFlagSeg(IRC_IS_UNA),
      dumpBinAndUna,
      verifyUna,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CUna::accKid,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_PHI, "phi", CPhi::kid_map, CPhi::kid_num,
      sizeof(CPhi),
      IRDescFlagSeg(IRC_IS_STMT|IRC_HAS_RESULT|IRC_IS_MEM_REF|
          IRC_IS_STMT_IN_BB|IRC_HAS_DU|IRC_IS_WRITE_PR|IRC_IS_WRITE_WHOLE_PR),
      dumpPhi,
      verifyPhi,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      CPhi::accSSAInfo,
      CPhi::accPrno,
      CPhi::accResultPR,
      CPhi::accKid,
      CPhi::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_REGION, "region", CRegion::kid_map, CRegion::kid_num,
      sizeof(CRegion),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_STMT_IN_BB),
      dumpRegion,
      verifyNothing,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      NO_ACC_KID_FUNC,
      CRegion::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_CFI_DEF_CFA, "cfi_def_cfa", CCFIDefCfa::kid_map, CCFIDefCfa::kid_num,
      sizeof(CCFIDefCfa),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_STMT_IN_BB),
      dumpCFIDefCfa,
      verifyNothing,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CCFIDefCfa::accKid,
      CCFIDefCfa::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_CFI_SAME_VALUE, "cfi_same_value",
      CCFISameValue::kid_map, CCFISameValue::kid_num,
      sizeof(CCFISameValue),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_STMT_IN_BB),
      dumpCFISameValue,
      verifyNothing,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CCFISameValue::accKid,
      CCFISameValue::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_CFI_OFFSET, "cfi_offset", CCFIOffset::kid_map, CCFIOffset::kid_num,
      sizeof(CCFIOffset),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_STMT_IN_BB),
      dumpCFIOffset,
      verifyNothing,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CCFIOffset::accKid,
      CCFIOffset::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_CFI_RESTORE, "cfi_restore",
      CCFIRestore::kid_map, CCFIRestore::kid_num,
      sizeof(CCFIRestore),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_STMT_IN_BB),
      dumpCFIRestore,
      verifyNothing,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CCFIRestore::accKid,
      CCFIRestore::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    { IR_CFI_DEF_CFA_OFFSET,
      "cfi_def_cfa_offset", CCFIDefCfaOffset::kid_map,
      CCFIDefCfaOffset::kid_num,
      sizeof(CCFIDefCfaOffset),
      IRDescFlagSeg(IRC_IS_STMT|IRC_IS_STMT_IN_BB),
      dumpCFIDefCfaOffst,
      verifyNothing,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      CCFIDefCfaOffset::accKid,
      CCFIDefCfaOffset::accBB,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },

    #include "ir_desc_ext.impl"

    { IR_CODE_NUM, "LAST IR CODE", 0x0, 0,
      0,
      IRDescFlagSeg(0),
      NO_DUMP_FUNC,
      NO_VERIFY_FUNC,
      NO_ACC_RHS_FUNC,
      NO_ACC_IDINFO_FUNC,
      NO_ACC_OFST_FUNC,
      NO_ACC_SSAINFO_FUNC,
      NO_ACC_PRNO_FUNC,
      NO_ACC_RESPR_FUNC,
      NO_ACC_KID_FUNC,
      NO_ACC_BB_FUNC,
      NO_ACC_BASE_FUNC,
      NO_ACC_LAB_FUNC,
      NO_ACC_DET_FUNC,
      NO_ACC_SS_FUNC,
      NO_ACC_RESLIST_FUNC, },
};

RoundDesc const g_round_desc[] = {
    { ROUND_UNDEF, "undef" },
    { ROUND_DOWN, "down" },
    { ROUND_UP, "up" },
    { ROUND_TOWARDS_ZERO, "twards_zero" },
    { ROUND_AWAY_FROM_ZERO, "awayfromzero" },
    { ROUND_TO_NEAREST_INTEGER, "tonearestinteger" },
    { ROUND_HALF_UP, "halfup" },
    { ROUND_HALF_DOWN, "halfdown" },
    { ROUND_HALF_TOWARDS_ZERO, "halftowardszero" },
    { ROUND_HALF_AWAY_FROM_ZERO, "halfawayfromzero" },
    { ROUND_HALF_TO_EVEN, "halftoeven" },
    { ROUND_HALF_TO_ODD, "halftoodd" },
};

//The function only invoked at debug mode.
bool checkIRDesc()
{
    UINT sz = (UINT)(1 << IR_CODE_BIT_SIZE);
    ASSERTN(IR_CODE_NUM <= sz, ("code field is too small"));
    DUMMYUSE(sz);
    for (UINT i = IR_UNDEF; i < IR_CODE_NUM; i++) {
        ASSERT0(i == (UINT)IRDES_code(i));
    }
    UINT descnum = sizeof(g_ir_desc) / sizeof(g_ir_desc[0]);
    ASSERTN_DUMMYUSE(descnum - 1 == IR_CODE_NUM, ("miss IRDesc declaration"));
    return true;
}


//The function only invoked at debug mode.
bool checkRoundDesc()
{
    for (UINT i = ROUND_UNDEF; i < ROUND_TYPE_NUM; i++) {
        ASSERT0(i == (UINT)ROUNDDESC_type(g_round_desc[i]));
    }
    UINT descnum = sizeof(g_round_desc) / sizeof(g_round_desc[0]);
    ASSERTN_DUMMYUSE(descnum == ROUND_TYPE_NUM, ("miss RoundDesc declaration"));
    return true;
}

} //namespace xoc
